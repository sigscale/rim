{
	"$id": "http://sigscale.org/schema/resourceCatalogManagement",
	"title": "Resource Catalog Management",
	"description": "Definitions from TMF634 v3 Swagger",
	"definitions": {
		"ResourceCatalog": {
			"type": "object",
			"description": "The root entity for resource catalog management.\nA resource catalog is a group of resource specifications made available through resource candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers).",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of the Catalog"
				},
				"href": {
					"type": "string",
					"description": "Unique reference of the catalog"
				},
				"name": {
					"type": "string",
					"description": "Name of the catalog"
				},
				"description": {
					"type": "string",
					"description": "Description of this catalog"
				},
				"@type": {
					"type": "string",
					"description": "Indicates the (class) type of catalog. For resource catalogs, this will be 'ResourceCatalog'."
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "Indicates<b> </b>the base (class) type of this REST resource"
				},
				"version": {
					"type": "string",
					"description": "Catalog version"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which the catalog is valid"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status"
				},
				"relatedParty": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelatedPartyRef"
					}
				},
				"category": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CategoryRef"
					}
				}
			}
		},
		"ResourceCategory": {
			"type": "object",
			"description": "The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of the category"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to the category"
				},
				"name": {
					"type": "string",
					"description": "Name of the category"
				},
				"description": {
					"type": "string",
					"description": "Description of the category"
				},
				"@type": {
					"type": "string",
					"description": "The (class) type of this category"
				},
				"@schemalLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "Immediate base class type of this category"
				},
				"version": {
					"type": "string",
					"description": "Category version"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which the category is valid"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update"
				},
				"parentId": {
					"type": "string",
					"description": "Unique identifier of the parent category"
				},
				"isRoot": {
					"type": "boolean",
					"description": "If true, this Boolean indicates that the category is a root of categories"
				},
				"category": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CategoryRef"
					}
				},
				"resourceCandidate": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceCandidateRef"
					}
				},
				"relatedParty": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelatedPartyRef"
					}
				}
			}
		},
		"ResourceCandidate": {
			"type": "object",
			"description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of this REST resource"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to this REST resource"
				},
				"name": {
					"type": "string",
					"description": "Name given to this REST resource"
				},
				"description": {
					"type": "string",
					"description": "Description of this REST resource"
				},
				"@type": {
					"type": "string",
					"description": "Class type of this REST resource"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "The (immediate) base class type of this REST resource"
				},
				"version": {
					"type": "string",
					"description": "the version of resource candidate"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which this REST resource is valid"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update of this REST resource"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status of the resource candidate."
				},
				"category": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CategoryRef"
					}
				},
				"resourceSpecification": {
					"$ref": "#/definitions/ResourceSpecificationRef"
				}
			}
		},
		"ResourceSpecification": {
			"type": "object",
			"description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of this REST resource"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to this REST resource"
				},
				"name": {
					"type": "string",
					"description": "Name given to this REST resource"
				},
				"description": {
					"type": "string",
					"description": "Description of this REST resource"
				},
				"@type": {
					"type": "string",
					"description": "Class type of this REST resource"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "The (immediate) base class type of this REST resource"
				},
				"version": {
					"type": "string",
					"description": "Resource Specification version"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which this REST resource is valid"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update of this REST resource"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status of the resource specification"
				},
				"isBundle": {
					"type": "boolean",
					"description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
				},
				"category": {
					"type": "string",
					"description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
				},
				"targetResourceSchema": {
					"$ref": "#/definitions/TargetResourceSchemaRef"
				},
				"feature": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"attachment": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Attachment"
					}
				},
				"relatedParty": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelatedPartyRef"
					}
				},
				"resourceSpecCharacteristic": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecCharacteristic"
					}
				},
				"resourceSpecRelationship": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecRelationship"
					}
				}
			}
		},
		"PhysicalResourceSpec": {
			"type": "object",
			"description": "This is a concrete class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PhysicalResource.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of this REST resource"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to this REST resource"
				},
				"name": {
					"type": "string",
					"description": "Name given to this REST resource"
				},
				"description": {
					"type": "string",
					"description": "Description of this REST resource"
				},
				"@type": {
					"type": "string",
					"description": "Class type of this REST resource"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "The (immediate) base class type of this REST resource"
				},
				"version": {
					"type": "string",
					"description": "Resource Specification version"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which this REST resource is valid"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update of this REST resource"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status of the resource specification"
				},
				"isBundle": {
					"type": "boolean",
					"description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
				},
				"category": {
					"type": "string",
					"description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
				},
				"model": {
					"type": "string",
					"description": "This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute."
				},
				"part": {
					"type": "string",
					"description": "This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute."
				},
				"sku": {
					"type": "string",
					"description": "This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute."
				},
				"vendor": {
					"type": "string",
					"description": "This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource."
				},
				"place": {
					"$ref": "#/definitions/PlaceRef"
				},
				"targetResourceSchema": {
					"$ref": "#/definitions/TargetResourceSchemaRef"
				},
				"feature": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"attachment": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Attachment"
					}
				},
				"relatedParty": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelatedPartyRef"
					}
				},
				"resourceSpecCharacteristic": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecCharacteristic"
					}
				},
				"resourceSpecRelationship": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecRelationship"
					}
				}
			}
		},
		"LogicalResourceSpec": {
			"type": "object",
			"description": "This is a base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a LogicalResource.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of this REST resource"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to this REST resource"
				},
				"name": {
					"type": "string",
					"description": "Name given to this REST resource"
				},
				"description": {
					"type": "string",
					"description": "Description of this REST resource"
				},
				"@type": {
					"type": "string",
					"description": "Class type of this REST resource"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing this REST resource"
				},
				"@baseType": {
					"type": "string",
					"description": "The (immediate) base class type of this REST resource"
				},
				"version": {
					"type": "string",
					"description": "Resource Specification version"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which this REST resource is valid"
				},
				"lastUpdate": {
					"type": "string",
					"format": "date-time",
					"description": "Date and time of the last update of this REST resource"
				},
				"lifecycleStatus": {
					"type": "string",
					"description": "Used to indicate the current lifecycle status of the resource specification"
				},
				"isBundle": {
					"type": "boolean",
					"description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
				},
				"category": {
					"type": "string",
					"description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
				},
				"targetResourceSchema": {
					"$ref": "#/definitions/TargetResourceSchemaRef"
				},
				"feature": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"attachment": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Attachment"
					}
				},
				"relatedParty": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelatedPartyRef"
					}
				},
				"resourceSpecCharacteristic": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecCharacteristic"
					}
				},
				"resourceSpecRelationship": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecRelationship"
					}
				}
			}
		},
		"TimePeriod": {
			"type": "object",
			"description": "A base / value business entity used to represent a period of time between two timepoints.",
			"properties": {
				"startDateTime": {
					"type": "string",
					"format": "date-time",
					"description": "An instant of time, starting at the TimePeriod"
				},
				"endDateTime": {
					"type": "string",
					"format": "date-time",
					"description": "An instant of time, ending at the TimePeriod."
				}
			}
		},
		"RelatedPartyRef": {
			"type": "object",
			"description": "RelatedParty reference. A related party defines party or party role linked to a specific entity.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of a related party"
				},
				"href": {
					"type": "string",
					"description": "Reference of the related party, could be a party reference or a party role reference"
				},
				"role": {
					"type": "string",
					"description": "Role of the related party."
				},
				"name": {
					"type": "string",
					"description": "Name of the related party"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "Validity period of the related party"
				}
			}
		},
		"CategoryRef": {
			"type": "object",
			"description": "Category reference. The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique reference of the category"
				},
				"href": {
					"type": "string",
					"description": "Unique reference of the category"
				},
				"version": {
					"type": "string",
					"description": "Category version"
				},
				"name": {
					"type": "string",
					"description": "Name of the category"
				}
			}
		},
		"ResourceCandidateRef": {
			"type": "object",
			"description": "ResourceCandidate reference: A resource candidate is an entity that makes a ResourceSpecification available to a catalog.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of the resource candidate"
				},
				"href": {
					"type": "string",
					"description": "Reference of the resource candidate"
				},
				"version": {
					"type": "string",
					"description": "Version of the resource candidate"
				},
				"name": {
					"type": "string",
					"description": "Name of the resource candidate"
				}
			}
		},
		"ResourceSpecificationRef": {
			"type": "object",
			"description": "Resource Specification reference: The ResourceSpecification is required to realize a ProductSpecification.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of the resource specification"
				},
				"href": {
					"type": "string",
					"description": "Reference of the resource specification"
				},
				"name": {
					"type": "string",
					"description": "Name of the requiredResourceSpecification"
				},
				"version": {
					"type": "string",
					"description": "Resource specification version"
				}
			}
		},
		"TargetResourceSchemaRef": {
			"type": "object",
			"description": "The reference object to the schema and type of target resource which is described by resource specification",
			"properties": {
				"@type": {
					"type": "string",
					"description": "Class type of the target resource"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This field provides a link to the schema describing the target resource"
				}
			}
		},
		"Feature": {
			"type": "object",
			"description": "applicable feature(s) for this resource specification.",
			"properties": {
				"id": {
					"type": "string",
					"description": "reference id to the feature. It is optional if the feature is not defined as a stand-alone object."
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to the target feature. It is optional if the feature is not defined as a separate REST resource."
				},
				"version": {
					"type": "string",
					"description": "feature version"
				},
				"name": {
					"type": "string",
					"description": "Unique name given to the feature. it is Required if the feature is not introduced as a separate REST resource"
				},
				"@type": {
					"type": "string",
					"description": "The optional (class) type of the feature"
				},
				"isBundle": {
					"type": "boolean",
					"description": "A flag indicating if the feature is bundle (true) or not (false)."
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which this relationship is valid"
				},
				"isEnabled": {
					"type": "boolean",
					"description": "A flag indicating if the feature is enabled (true) or not (false)."
				}
			}
		},
		"Attachment": {
			"type": "object",
			"description": "Complements the description of an element (for instance a product) through video, pictures...",
			"properties": {
				"description": {
					"type": "string",
					"description": "A narrative text describing the content of the attachment"
				},
				"href": {
					"type": "string",
					"description": "Reference of the attachment"
				},
				"id": {
					"type": "string",
					"description": "Unique identifier of the attachment"
				},
				"type": {
					"type": "string",
					"description": "Attachment type such as video, picture"
				},
				"url": {
					"type": "string",
					"description": "Uniform Resource Locator, is a web page address (a subset of URI)"
				}
			}
		},
		"ResourceSpecCharacteristic": {
			"type": "object",
			"description": "This class defines the characteristic features of a resource specification. Every ResourceSpecification has a variety of important attributes, methods, constraints, and\nrelationships, which distinguish a resource specification from other resource specifications.",
			"properties": {
				"name": {
					"type": "string",
					"description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
				},
				"description": {
					"type": "string",
					"description": "A narrative that explains the CharacteristicSpecification."
				},
				"valueType": {
					"type": "string",
					"description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
				},
				"configurable": {
					"type": "boolean",
					"description": "If true, the Boolean indicates that the ResourceSpecCharacteristic is configurable"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period of time for which a characteristic is applicable."
				},
				"@type": {
					"type": "string",
					"description": "(Class) type of the ResourceSpecCharacteristic"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "A link to the schema describing this characteristic specification"
				},
				"@valueSchemaLocation": {
					"type": "string",
					"description": "This (optional) field provides a link to the schema describing the value type"
				},
				"minCardinality": {
					"type": "integer",
					"description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
				},
				"maxCardinality": {
					"type": "integer",
					"description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
				},
				"isUnique": {
					"type": "boolean",
					"description": "An indicator that specifies if a value is unique for the specification. Possible values are; \"unique while value is in effect\" and \"unique whether value is in effect or not\""
				},
				"regex": {
					"type": "string",
					"description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
				},
				"extensible": {
					"type": "boolean",
					"description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
				},
				"resourceSpecCharRelationship": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecCharRelationship"
					}
				},
				"resourceSpecCharacteristicValue": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ResourceSpecCharacteristicValue"
					}
				}
			}
		},
		"ResourceSpecRelationship": {
			"type": "object",
			"description": "A migration, substitution, dependency or exclusivity relationship between/among resource specifications.",
			"properties": {
				"type": {
					"type": "string",
					"description": "Type of relationship such as migration, substitution, dependency, exclusivity"
				},
				"role": {
					"type": "string",
					"description": "The association role for this resource specification"
				},
				"id": {
					"type": "string",
					"description": "Unique identifier of target ResourceSpecification"
				},
				"href": {
					"type": "string",
					"description": "Reference of the target ResourceSpecification"
				},
				"name": {
					"type": "string",
					"description": "The name given to the target resource specification instance"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which the ResourceSpecRelationship is valid"
				}
			}
		},
		"ResourceSpecCharRelationship": {
			"type": "object",
			"description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
			"properties": {
				"type": {
					"type": "string",
					"description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
				},
				"name": {
					"type": "string",
					"description": "Name of the target characteristic"
				},
				"id": {
					"type": "string",
					"description": "Unique identifier of the target specification"
				},
				"href": {
					"type": "string",
					"description": "Hyperlink reference to the target specification"
				},
				"@type": {
					"type": "string",
					"description": "class type of target specification"
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period for which the object is valid"
				}
			}
		},
		"ResourceSpecCharacteristicValue": {
			"type": "object",
			"description": "A number or text that can be assigned to a ResourceSpecCharacteristic.",
			"properties": {
				"valueType": {
					"type": "string",
					"description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
				},
				"isDefault": {
					"type": "boolean",
					"description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
				},
				"value": {
					"$ref": "#/definitions/ResourceSpecCharacteristic",
					"description": "The value that the characteristic can take on. If the value is a complex type, the definition of the type should be found by the link as defined in @schemaLocation"
				},
				"unitOfMeasure": {
					"type": "string",
					"description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod",
					"description": "The period of time for which a value is applicable."
				},
				"valueFrom": {
					"type": "integer",
					"description": "The low range value that a characteristic can take on"
				},
				"valueTo": {
					"type": "integer",
					"description": "The upper range value that a characteristic can take on"
				},
				"rangeInterval": {
					"type": "string",
					"description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
				},
				"regex": {
					"type": "string",
					"description": "A regular expression constraint for given value"
				},
				"@type": {
					"type": "string",
					"description": "The class type of a complex value type"
				},
				"@schemaLocation": {
					"type": "string",
					"description": "This (optional) field provides a link to the schema describing the value type"
				}
			}
		},
		"PlaceRef": {
			"type": "object",
			"description": "Place reference. Place defines the places where the products are sold or delivered.",
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique identifier of the place"
				},
				"href": {
					"type": "string",
					"description": "Unique reference of the place"
				},
				"name": {
					"type": "string",
					"description": "A user-friendly name for the place, such as \"Paris Store\", \"London Store\", \"Main Home\""
				},
				"role": {
					"type": "string",
					"description": "Role of the place (for instance: 'home delivery', 'shop retrieval')"
				}
			}
		},
		"FeatureSpec": {
			"title": "Configuration Feature Specification",
			"description": "Specifies how a resource function exposes its capabilities to consumers",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"isBundle": {
					"type": "boolean",
					"description": "A Feature Group is represented as a Feature with isBundle set to true."
				},
				"validFor": {
					"$ref": "#/definitions/TimePeriod"
				},
				"featureRelationship": {
					"type": "array",
					"items": {
						"$ref": "entityCatalogManagement#/definitions/EntitySpecification"
					}
				},
				"constraint": {
					"type": "array",
					"items": {
						"$ref": "entityCatalogManagement#/definitions/EntitySpecification"
					}
				},
				"featureSpecCharacteristic": {
					"type": "array",
					"items": {
						"$ref": "entityCatalogManagement#/definitions/EntitySpecification"
					}
				},
				"isEnabled": {
					"type": "boolean"
				}
			}
		},
		"SapSpecification": {
			"title": "Service Access Point (SAP) Specification",
			"description": "Defines a set of attributes and (optionally) associated values that may be applied to one or more service access points",
			"type": "object",
			"properties": {
				"type": {
					"description": "Method to group SAP Specifications that have strongly marked and readily defined similarities",
					"type": "string"
				},
				"applicableStateValues": {
					"description": "A list of possible states that a ServiceAccessPoint may take on",
					"type": "string"
				}
			}
		},
		"ConnectivitySpec": {
			"title": "Connectivity Specification",
			"description": "Predefines adjacency relationships among components",
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"endpoint": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/EndpointSpec"
					}
				}
			},
			"required": [
				"name",
				"endpoint"
			]
		},
		"EndpointSpec": {
			"allOf": [
				{
					"$ref": "#/definitions/ResourceSpecification"
				},
				{
					"title": "Endpoint Specification",
					"description": "Endpoint in a communications link",
					"type": "object",
					"properties": {
						"isRoot": {
							"type": "boolean",
							"description": "False if endpoint is a sink (only), true if endpoint is (also) a source"
						},
						"connectionPointSpec": {
							"$ref": "#/definitions/ConnectionPointSpec"
						}
					}
				}
			]
		},
		"ConnectionPointSpec": {
			"$ref": "#/definitions/LogicalResourceSpec"
		},
		"ElectronicConnectionPointSpec": {
			"$ref": "#/definitions/LogicalResourceSpec"
		},
		"SoftConnectionPointSpec": {
			"$ref": "#/definitions/LogicalResourceSpec"
		}
	}
}
