@copyright 2018-2019 SigScale Global Inc.
@version %VERSION%
@title %DESCRIPTION%
@doc This application implements (Resource) Inventory Management (IM).

==Introduction==

==Installation==
Before starting the application for the first time, {@link //mnesia/mnesia. mnesia}
should be initialized. Create a schema and start mnesia on all nodes
where the application {@link //sigscale_im. sigscale_im} application will run.

The following command will initialize {@link //sigscale_im. sigscale_im}
on the current node and create a default REST user
"admin" with password "admin".

e.g &#058;
 	```
	(im@h)1> im_app:install().
	{ok, [httpd_group, httpd_user, inventory, catalog]}
	'''

===HTTP Authentication===
To use the {@link //inets/mod_auth. mod_auth} module for authentication
you should create necessary users in the {@link //mnesia/mnesia. mnesia}
tables it uses. All users will be added to groups specified in `require_group'
option in inets httpd confifuration.
e.g &#058;
	```
	1> im:add_user("john", "g2k7hyeh6qa", "en").
	{ok,{1501829429047,149}}
	2> im:add_user("bss", "nfc9xgp32xha", "en").
	{ok,{1501829458220,157}}

	'''

===Internationalization (i18n)===
The web user interface (UI) may be internationalized by specifying `Locale' in 
{@link //im/im:add_user/3. im:add_user/3} where `Locale'
is a two letter ISO-639-1 language code. A corresponding message file
should be provided in `priv/www/locales'.
	```
	3> im:add_user("alejandro", "sjjymz5prtcd", "es").
	{ok,{1500544430723584044,90}}
	'''
==Operation==

==REST API==
The {@link //im. im} application provides a
<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">RESTful</a>
API built on the <a href="http://tools.ietf.org/html/rfc2616">HTTP</a> protocol
and using <a href="http://tools.ietf.org/html/rfc4627">JSON</a> data encoding.

The following <a href="https://www.tmforum.org/open-apis/">TM Forum Open APIs</a>
are used:

<p><table id="mt">
   <thead>
      <tr id="mt">
         <th id="mt">Document Number</th>
         <th id="mt">TM Forum Open API</th>
      </tr>
   </thead>
   <tbody>
      <tr id="mt">
         <td id="mt">TMF632</td>
         <td id="mt">Party Management</td>
      </tr>
      <tr id="mt">
         <td id="mt">TMF639</td>
         <td id="mt">Resource Inventory</td>
      </tr>
   </tbody>
</table></p>

===HTTP Methods===
The <a href="http://tools.ietf.org/html/rfc2616">HTTP</a> methods used in
this API include
<a href="http://tools.ietf.org/html/rfc2616#section-9.3">`GET'</a>,
<a href="http://tools.ietf.org/html/rfc2616#section-9.5">`POST'</a>,
<a href="https://tools.ietf.org/html/rfc2068#section-19.6.1">`PATCH'</a> and
<a href="http://tools.ietf.org/html/rfc2616#section-9.7">`DELETE'</a>.

===Media Types===
The media types used in this application are described below.

<p><table id="mt">
   <thead>
      <tr id="mt">
         <th id="mt">Type Name</th>
      </tr>
   </thead>
   <tbody>
      <tr id="mt">
         <td id="mt"><a href="http://tools.ietf.org/html/rfc4627">application/json</a></td>
      </tr>
      <tr id="mt">
         <td id="mt"><a href="http://tools.ietf.org/html/rfc7396">text/x-yaml</a></td>
      </tr>
   </tbody>
</table></p>

===Advanced Attribute Filtering Pattern===
Complex queries are supported using a `filter' attribute as described in issue
<a href="https://projects.tmforum.org/jira/browse/AP-832">AP-832</a> of TM Forum
<a href="https://projects.tmforum.org/wiki/display/AP/">API Project</a>.

<p>Example:</p>
```
   filter="[{eventCharacteristic.contains=[{name=reportingEntityName,value.like=[h%25]}]}]"
'''
<p>The right hand side (RHS) of the `filter' attribute should be enclosed
in double quotes (`""'). Query values seperated by a comma (`,') and treated as AND.
A complex value should be enclosed in `{}'.</p>

<p><table id="mt">
   <thead>
      <tr id="mt">
         <th id="mt">Operation</th>
         <th id="mt">Description</th>
         <th id="mt">LHS Data Type</th>
         <th id="mt">RHS Data Type</th>
      </tr>
   </thead>
   <tbody>
      <tr id="mt">
         <td id="mt">.exact OR =</td>
         <td id="mt">Equals (Case-sensitive)</td>
         <td id="mt">String, Number, Date, Boolean</td>
         <td id="mt">String, Number, Date, Boolean</td>
      </tr>
      <tr id="mt">
         <td id="mt">.notexact OR &lt;&gt;</td>
         <td id="mt">Not equal to (Case-sensitive)</td>
         <td id="mt">String, Number, Date, Boolean</td>
         <td id="mt">String, Number, Date, Boolean</td>
      </tr>
      <tr id="mt">
         <td id="mt">.like</td>
         <td id="mt">Match the patterns in the argument array,
            where "%" matches zero or more characters.</td>
         <td id="mt">String</td>
         <td id="mt">Array of String</td>
      </tr>
      <tr id="mt">
         <td id="mt">.contains</td>
         <td id="mt">Match LHS elements with RHS</td>
         <td id="mt">Collection/Array</td>
         <td id="mt">Array of String</td>
      </tr>
   </tbody>
</table></p>

===Resources &amp; Operations===
The resources, their URIs, the methods available on them and expected
responses, are described in this section.  Only the headers, and responses,
relevant to the function being described are included.  Any valid HTTP
headers may be included in requests and responses.

<p><table>
   <caption class="op"><b>Operations</b></caption>
   <tbody>
      <tr>
         <td><a href="#Get-User">Get a User</a></td>
      </tr>
      <tr>
         <td><a href="#Get-Users">Get all Users</a></td>
      </tr>
   </tbody>
</table></p>


==Configuration==

<table id="Get-User" class="op">
   <caption class="op"><b>Get user</b></caption>
   <tr class="op">
      <td id="opl">Resource URI</td>
      <td id="opr">/partyManagement/v1/individual/{id}</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Methods</td>
      <td id="opr">Get</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Headers</td>
      <td id="opr">Accept</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Message Body</td>
      <td id="opr">none</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Headers</td>
      <td id="opr">Location, Content-Type, Content-Length, Etag</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Body</td>
      <td id="opr">Representation of fault management entity</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Status</td>
      <td id="opr">200 OK, 404 Not Found</td>
   </tr>
</table>
<p>Example request:<pre>
GET /partyManagement/v1/individual/{id}
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 184

[
 {
  "id": "admin",
  "href": "/partyManagement/v1/individual/admin",
  "characteristic": [
                     {
                      "value": "en",
                      "name": "locale"
                     },
                     {
                      "value": "admin",
                      "name": "username"
                     },
                     {
                      "value": "admin",
                      "name": "password"
                     }
                   ],
 }
]
</pre></p>

<table id="Get-Users" class="op">
   <caption class="op"><b>Get all users</b></caption>
   <tr class="op">
      <td id="opl">Resource URI</td>
      <td id="opr">/partyManagement/v1/individual</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Methods</td>
      <td id="opr">Get</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Headers</td>
      <td id="opr">Accept</td>
   </tr>
   <tr class="op">
      <td id="opl">Request Message Body</td>
      <td id="opr">none</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Headers</td>
      <td id="opr">Location, Content-Type, Content-Length, Etag</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Body</td>
      <td id="opr">Representation of fault management entity</td>
   </tr>
   <tr class="op">
      <td id="opl">Response Status</td>
      <td id="opr">200 OK, 404 Not Found</td>
   </tr>
</table>
<p>Example request:<pre>
GET /partyManagement/v1/individual
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 552

[
 {
  "id": "admin",
  "href": "/partyManagement/v1/individual/admin",
  "characteristic": [
                     {
                      "value": "en",
                      "name": "locale"
                     },
                     {
                      "value": "admin",
                      "name": "username"
                     },
                     {
                      "value": "admin",
                      "name": "password"
                     }
                   ],
 }
 {
  "id": "sigscale",
  "href": "/partyManagement/v1/individual/sigscale",
  "characteristic": [
                     {
                      "value": "en",
                      "name": "locale"
                     },
                     {
                      "value": "sigscale",
                      "name": "username"
                     },
                     {
                      "value": "bucky",
                      "name": "password"
                     }
                   ],
 }
]
</pre></p>

